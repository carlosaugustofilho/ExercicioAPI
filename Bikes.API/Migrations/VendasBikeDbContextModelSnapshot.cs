// <auto-generated />
using System;
using BikeVendas.API.BikeVendas.DBExtension;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bikes.API.Migrations
{
    [DbContext(typeof(VendasBikeDbContext))]
    partial class VendasBikeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BikeVendas.API.BikeVendas.Domain.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ItemDoPedidoPedidoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ClienteId");

                    b.HasIndex("ItemDoPedidoPedidoId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("BikeVendas.API.BikeVendas.Domain.Models.ItemDoPedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoId"), 1L, 1);

                    b.Property<string>("NomePedido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PedidoId1")
                        .HasColumnType("int");

                    b.Property<int?>("ValorUnitario")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Unidades");

                    b.HasKey("PedidoId");

                    b.HasIndex("PedidoId1");

                    b.ToTable("ItemDoPedidos");
                });

            modelBuilder.Entity("BikeVendas.API.BikeVendas.Domain.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoId"), 1L, 1);

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDeCriação")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPedidos")
                        .HasColumnType("bit");

                    b.Property<int>("NumeroDoPedido")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("PedidoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("BikeVendas.API.BikeVendas.Domain.Models.Cliente", b =>
                {
                    b.HasOne("BikeVendas.API.BikeVendas.Domain.Models.ItemDoPedido", null)
                        .WithMany("Clientes")
                        .HasForeignKey("ItemDoPedidoPedidoId");
                });

            modelBuilder.Entity("BikeVendas.API.BikeVendas.Domain.Models.ItemDoPedido", b =>
                {
                    b.HasOne("BikeVendas.API.BikeVendas.Domain.Models.Pedido", null)
                        .WithMany("ItemDoPedidos")
                        .HasForeignKey("PedidoId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BikeVendas.API.BikeVendas.Domain.Models.Pedido", b =>
                {
                    b.HasOne("BikeVendas.API.BikeVendas.Domain.Models.Cliente", null)
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("BikeVendas.API.BikeVendas.Domain.Models.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("BikeVendas.API.BikeVendas.Domain.Models.ItemDoPedido", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("BikeVendas.API.BikeVendas.Domain.Models.Pedido", b =>
                {
                    b.Navigation("ItemDoPedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
